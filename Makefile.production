# Production Makefile for ReShop

.PHONY: help build deploy start stop restart logs clean backup migrate collectstatic

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
	@echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-20s\033[0m %s\n", $$1, $$2}'

build: ## –°–æ–±—Ä–∞—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
	@echo "üî® –°–±–æ—Ä–∫–∞ frontend..."
	cd frontend-vue && npm ci && npm run build:prod && cd ..
	@echo "üê≥ –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤..."
	docker-compose -f docker-compose.production.yml build --no-cache

deploy: ## –ü–æ–ª–Ω–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ
	@echo "üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ..."
	./deploy.sh

start: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–¥–∞–∫—à–µ–Ω —Å–µ—Ä–≤–∏—Å—ã
	@echo "‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω —Å–µ—Ä–≤–∏—Å–æ–≤..."
	docker-compose -f docker-compose.production.yml up -d

stop: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–¥–∞–∫—à–µ–Ω —Å–µ—Ä–≤–∏—Å—ã
	@echo "‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ–¥–∞–∫—à–µ–Ω —Å–µ—Ä–≤–∏—Å–æ–≤..."
	docker-compose -f docker-compose.production.yml down

restart: ## –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–¥–∞–∫—à–µ–Ω —Å–µ—Ä–≤–∏—Å—ã
	@echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω —Å–µ—Ä–≤–∏—Å–æ–≤..."
	docker-compose -f docker-compose.production.yml restart

logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "üìã –õ–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–æ–≤..."
	docker-compose -f docker-compose.production.yml logs -f

logs-backend: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ backend
	@echo "üìã –õ–æ–≥–∏ backend..."
	docker-compose -f docker-compose.production.yml logs -f backend

logs-frontend: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ frontend
	@echo "üìã –õ–æ–≥–∏ frontend..."
	docker-compose -f docker-compose.production.yml logs -f frontend

logs-nginx: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ nginx
	@echo "üìã –õ–æ–≥–∏ nginx..."
	docker-compose -f docker-compose.production.yml logs -f nginx

status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤..."
	docker-compose -f docker-compose.production.yml ps

clean: ## –û—á–∏—Å—Ç–∏—Ç—å Docker —Ä–µ—Å—É—Ä—Å—ã
	@echo "üßπ –û—á–∏—Å—Ç–∫–∞ Docker —Ä–µ—Å—É—Ä—Å–æ–≤..."
	docker-compose -f docker-compose.production.yml down -v
	docker system prune -f
	docker volume prune -f

backup: ## –°–æ–∑–¥–∞—Ç—å –±—ç–∫–∞–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
	@echo "üíæ –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
	@mkdir -p backups
	docker-compose -f docker-compose.production.yml exec -T db pg_dump -U reshop_user reshop > backups/backup_$(shell date +%Y%m%d_%H%M%S).sql

restore: ## –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏–∑ –±—ç–∫–∞–ø–∞ (—É–∫–∞–∂–∏—Ç–µ FILE=backup_file.sql)
	@if [ -z "$(FILE)" ]; then echo "‚ùå –£–∫–∞–∂–∏—Ç–µ —Ñ–∞–π–ª –±—ç–∫–∞–ø–∞: make restore FILE=backup_file.sql"; exit 1; fi
	@echo "üì• –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏–∑ $(FILE)..."
	docker-compose -f docker-compose.production.yml exec -T db psql -U reshop_user -d reshop < backups/$(FILE)

migrate: ## –ü—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
	@echo "üóÑÔ∏è –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π..."
	docker-compose -f docker-compose.production.yml exec backend python manage.py migrate

collectstatic: ## –°–æ–±—Ä–∞—Ç—å —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
	@echo "üìÅ –°–±–æ—Ä —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤..."
	docker-compose -f docker-compose.production.yml exec backend python manage.py collectstatic --noinput

createsuperuser: ## –°–æ–∑–¥–∞—Ç—å —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	@echo "üë§ –°–æ–∑–¥–∞–Ω–∏–µ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è..."
	docker-compose -f docker-compose.production.yml exec backend python manage.py createsuperuser

shell: ## –û—Ç–∫—Ä—ã—Ç—å Django shell
	@echo "üêç –û—Ç–∫—Ä—ã—Ç–∏–µ Django shell..."
	docker-compose -f docker-compose.production.yml exec backend python manage.py shell

health-check: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–æ–≤..."
	@curl -f http://localhost/health > /dev/null 2>&1 && echo "‚úÖ Frontend: OK" || echo "‚ùå Frontend: FAILED"
	@curl -f http://localhost:8000/api/ > /dev/null 2>&1 && echo "‚úÖ Backend: OK" || echo "‚ùå Backend: FAILED"

update: ## –û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
	@echo "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
	git pull origin main
	$(MAKE) build
	$(MAKE) restart
	$(MAKE) migrate
	$(MAKE) collectstatic

monitor: ## –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
	@echo "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–µ—Ä–≤–∏—Å–æ–≤..."
	watch -n 5 'docker-compose -f docker-compose.production.yml ps'
